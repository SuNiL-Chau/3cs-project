{"version":3,"file":"openings.js","names":["openingForm","document","querySelector","addEventListener","e","preventDefault","formData","FormData","_iterator","_createForOfIteratorHelper","entries","_step","s","n","done","pair","value","console","log","concat","err","f"],"sources":["../../src/js/openings.js"],"sourcesContent":["var openingForm = document.querySelector(\".currentOpenings__openingsForm\");\r\n\r\nopeningForm.addEventListener(\"submit\", function (e) {\r\n  e.preventDefault();\r\n  const formData = new FormData(openingForm);\r\n  // Display the key/value pairs\r\n  for (const pair of formData.entries()) {\r\n    console.log(`${pair[0]}, ${pair[1]}`);\r\n  }\r\n  // ajax reuqest\r\n  //   const xhr = new XMLHttpRequest();\r\n  //   xhr.open(\"POST\", \"https://example.com/api\");\r\n  //   xhr.setRequestHeader(\"Content-Type\", \"application/json\");\r\n  //   xhr.withCredentials = true;\r\n  //   xhr.onload = function () {\r\n  //     if (xhr.status === 200) {\r\n  //       // process the response data here\r\n  //     } else {\r\n  //       // handle errors here\r\n  //     }\r\n  //   };\r\n  //   xhr.onerror = function () {\r\n  //     // handle errors here\r\n  //   };\r\n  //   xhr.send(formData);\r\n});\r\n\r\n// for second form comment for later use\r\n// let formConfig = {\r\n//   // class of the parent element where the error/success class is added\r\n//   classTo: \"form-group\",\r\n//   errorClass: \"has-danger\",\r\n//   successClass: \"has-success\",\r\n//   // class of the parent element where error text element is appended\r\n//   errorTextParent: \"form-group\",\r\n//   // type of element to create for the error text\r\n//   errorTextTag: \"div\",\r\n//   // class of the error text element\r\n//   errorTextClass: \"text-danger mt-2\",\r\n// };\r\n\r\n// var form = document.getElementById(\"contact-form\");\r\n\r\n// // create the pristine instance\r\n// var pristine = new Pristine(form, formConfig, true);\r\n\r\n// form.addEventListener(\"submit\", function (e) {\r\n//   e.preventDefault();\r\n\r\n//   // check if the form is valid\r\n//   var valid = pristine.validate(); // returns true or false\r\n// });\r\n"],"mappings":";;;;;AAAA,IAAIA,WAAW,GAAGC,QAAQ,CAACC,aAAa,CAAC,gCAAgC,CAAC;AAE1EF,WAAW,CAACG,gBAAgB,CAAC,QAAQ,EAAE,UAAUC,CAAC,EAAE;EAClDA,CAAC,CAACC,cAAc,EAAE;EAClB,IAAMC,QAAQ,GAAG,IAAIC,QAAQ,CAACP,WAAW,CAAC;EAC1C;EAAA,IAAAQ,SAAA,GAAAC,0BAAA,CACmBH,QAAQ,CAACI,OAAO,EAAE;IAAAC,KAAA;EAAA;IAArC,KAAAH,SAAA,CAAAI,CAAA,MAAAD,KAAA,GAAAH,SAAA,CAAAK,CAAA,IAAAC,IAAA,GAAuC;MAAA,IAA5BC,IAAI,GAAAJ,KAAA,CAAAK,KAAA;MACbC,OAAO,CAACC,GAAG,IAAAC,MAAA,CAAIJ,IAAI,CAAC,CAAC,CAAC,QAAAI,MAAA,CAAKJ,IAAI,CAAC,CAAC,CAAC,EAAG;IACvC;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;EAAA,SAAAK,GAAA;IAAAZ,SAAA,CAAAJ,CAAA,CAAAgB,GAAA;EAAA;IAAAZ,SAAA,CAAAa,CAAA;EAAA;AACF,CAAC,CAAC;;AAEF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA"}